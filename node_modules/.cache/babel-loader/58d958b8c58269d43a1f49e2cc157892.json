{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABC\\\\Downloads\\\\discord-clone-master\\\\discord-clone-master\\\\src\\\\Chat.js\";\nimport React, { useEffect, useState } from \"react\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport \"./Chat.css\";\nimport ChatHeader from \"./ChatHeader\";\nimport { selectUser } from \"./features/userSlice\";\nimport Message from \"./Message\";\nimport { useSelector } from \"react-redux\";\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\").doc(channelId).collection(\"messages\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    channelName: channelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    timestamp: message.timestamp,\n    message: message.message,\n    user: message.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    disabled: !channelId,\n    onChange: e => setInput(e.target.value),\n    placeholder: `Message #${channelName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !channelId,\n    className: \"chat__inputButton\",\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/ABC/Downloads/discord-clone-master/discord-clone-master/src/Chat.js"],"names":["React","useEffect","useState","AddCircleIcon","ChatHeader","selectUser","Message","useSelector","selectChannelId","selectChannelName","db","firebase","Chat","user","channelId","channelName","input","setInput","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","sendMessage","e","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","message","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport \"./Chat.css\";\nimport ChatHeader from \"./ChatHeader\";\nimport { selectUser } from \"./features/userSlice\";\nimport Message from \"./Message\";\nimport { useSelector } from \"react-redux\";\nimport { selectChannelId, selectChannelName } from \"./features/appSlice\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction Chat() {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (channelId) {\n      db.collection(\"channels\")\n        .doc(channelId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, [channelId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      user: user,\n    });\n\n    setInput(\"\");\n  };\n  return (\n    <div className=\"chat\">\n      <ChatHeader channelName={channelName} />\n\n      <div className=\"chat__messages\">\n        {messages.map((message) => (\n          <Message\n            timestamp={message.timestamp}\n            message={message.message}\n            user={message.user}\n          />\n        ))}\n      </div>\n      <div className=\"chat__input\">\n        \n        <form>\n          <input\n          \n            value={input}\n            disabled={!channelId}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder={`Message #${channelName}`}\n          />\n          <button\n            disabled={!channelId}\n            className=\"chat__inputButton\"\n            type=\"submit\"\n            onClick={sendMessage}\n            \n          >\n            \n          </button>\n        </form>\n       \n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}